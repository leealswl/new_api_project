NEWS_API_KEY=



//예전거
//const API_KEY = "dfa5549770ab47b7921b3ae0763768df";
// aba0666514534ea79d87736c79641bcd
//dfa5549770ab47b7921b3ae0763768df 내꺼
let newsList=[]
let url=new URL(`/.netlify/functions/getNews?country=us`, window.location.origin)

//페이지네이션
let totalResults =0
let page=1
const pageSize =10
const groupSize=5

const openNav = () => {
  document.getElementById("mySidenav").style.width = "250px";
};
const closeNav = () => {
  document.getElementById("mySidenav").style.width = "0";
};
//검색 인풋박스
const openSearchBox = () => {
  let inputArea = document.getElementById("input-area");
  if (inputArea.style.display === "inline") {
    inputArea.style.display = "none";
  } else {
    inputArea.style.display = "inline";
  }
};
// 검색창 엔터치면 검색할수있게.
const searchInput = document.querySelector('.search-input');

searchInput.addEventListener('keydown', function(e) {
  if (e.key === 'Enter') {
    searchNews();
  }
});

//똑같은내용 리팩토링 //try catch 에러
const getNews=async()=>{
  try {
    url.searchParams.set("page",page) // &page=page
    url.searchParams.set("pageSize",pageSize)
    const response=await fetch(url)
    // console.log("res",response)
  const data=await response.json()
  // console.log("aa?",data)
  if(response.status===200){
    if(data.articles.length===0) {
      throw new Error("No result for this search")      
    }
    newsList=data.articles;
    totalResults =data.totalResults;
    render()
    pagenationRender()
  } else {
    throw new Error (data.message)
  }
  }catch(error) {
    console.log("error메세지", error.message)
    errorRender(error.message)
  }
}

const newsAPI=async()=>{
  url=new URL(`https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`)
  getNews()
}
newsAPI();


//페이지네이션
const pagenationRender=()=>{
  //totalresult,page,pagesize, groupsize
  const totalPages =Math.ceil(totalResults/pageSize)
  const pageGroup = Math.ceil(page/groupSize);

  let lastPage =pageGroup * groupSize
    if (lastPage < totalPages) {
      lastPage =totalPages
    }
  let firstPage = lastPage-(groupSize -1)<=0? 1:lastPage-(groupSize -1) ;
  
//  전체 페이지가 5 이하일 경우 -> 첫 3개 페이지만 보이도록 고정
if (totalPages <= 5) {
  firstPage = 1;
  lastPage = Math.min(3, totalPages); // 최대 3개만 보이게 조정
}

//  마지막 페이지 5개로 딱 안 떨어질 경우 -> 남은 페이지만큼 보이게 조정
const remainingPages = totalPages % groupSize;
if (remainingPages > 0 && lastPage === totalPages) {
  firstPage = totalPages - remainingPages + 1;
}
let paginationHTML = "";

//  첫 번째 페이지 아닐 때만 '처음' 및 '이전' 표시
if (firstPage > 1) {
  paginationHTML += `
    <li class="page-item">
      <a class="page-link" href="#" onclick="moveToPage(1)">&laquo;</a> 
    </li>
    <li class="page-item">
      <a class="page-link" href="#" onclick="moveToPage(${page - 1})">&lt;</a>
    </li>
  `;
}

for (let i = firstPage; i <= lastPage; i++) {
  paginationHTML += `
    <li class="page-item ${i === page ? "active" : ""}" data-page="${i}">
      <a class="page-link" href="#" onclick="moveToPage(${i})">${i}</a>
    </li>
  `;
}
//  마지막 페이지가 아닐 때만 '다음' 및 '끝' 표시
if (lastPage < totalPages) {
  paginationHTML += `
    <li class="page-item">
      <a class="page-link" href="#" onclick="moveToPage(${page + 1})">&gt;</a>
    </li>
    <li class="page-item">
      <a class="page-link" href="#" onclick="moveToPage(${totalPages})">&raquo;</a> 
    </li>
  `;
}
document.querySelector('.pagination').innerHTML=paginationHTML

const activePageItem = document.querySelector(`.page-item[data-page="${page}"]`);
if (activePageItem) {
  activePageItem.classList.add("active");
}
}

const moveToPage=(pageNum)=>{
  console.log("move",pageNum)
  page=pageNum
  getNews()

}
const render=()=>{
  const newsHTML=newsList.map((item)=>
  `<div class="row news-data">
  <div class="col-lg-4">
    <a class="urlImgTag" href="${item.url}" target="_blank"> 
     <img class="thumbnails" src="${item.urlToImage || '/image/notlmage.png'}" />
     </a>
  </div>
  <div class="col-lg-8 news-title">
      <h2><a class="urlTag" href="${item.url}" target="_blank">
      ${item.title ||  "No title"}</a></h2> 
      <p>
      <a class="urlContentTag" href="${item.url}" target="_blank"> 
      ${item.content ? (item.content.length >200 ?item.content.slice(0,200) +"...Click" :item.content) : "No content"}
      </a>
      </p>
      <p>${item.source.name  ||"No source"} ${moment(item.publishedAt).fromNow()}</p>
      
  </div>
</div>`).join('')
document.getElementById('news-board').innerHTML=newsHTML;

}

const errorRender=(errorMessage)=>{
  const errorHTML=`<div class="alert alert-danger" role="alert">
  ${errorMessage}
</div>`
document.getElementById('news-board').innerHTML=errorHTML
}

// 카테고리 생각 :버튼리스트 가져와서 클릭이벤트, 카테고리별 뉴스가져오기 보여주기
const buttonList=document.querySelectorAll('.menus button')
// console.log(buttonList)
buttonList.forEach(buttonList=>buttonList.addEventListener('click',(e)=>categoryList(e)))

const categoryList=async(e)=> {
  const category = e.target.textContent.toLowerCase();
  // console.log("ee",category)
  url=new URL(`https://newsapi.org/v2/top-headlines?country=us&category=${category}&apiKey=${API_KEY}`)
  getNews()
}

//사이드 카테고리
const sideList=document.querySelectorAll('.side-menu-list button')
sideList.forEach(sideList=>sideList.addEventListener('click',(e)=>sideMenuList(e)))

const sideMenuList=async(e)=> {
  const sideList = e.target.textContent.toLowerCase();
  url=new URL(`https://newsapi.org/v2/top-headlines?country=us&category=${sideList}&apiKey=${API_KEY}`)
  getNews()
}
// 검색창 검색
const searchNews=async()=>{
  const keyword = document.querySelector('.search-input').value;
  url=new URL(`https://newsapi.org/v2/top-headlines?country=us&q=${keyword}&apiKey=${API_KEY}`)
  getNews()
}

